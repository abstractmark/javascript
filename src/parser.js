const replaceSpecialCharacters=str=>str=(str=(str=(str=(str=(str=(str=(str=str.replace(/&/g,"&amp;").replace(/\*/g,"&ast;")).replace(/>/g,"&gt;").replace(/</g,"&lt;")).replace(/"/g,"&quot;").replace(/'/g,"&#39;")).replace(/\\\`/g,"&#96;").replace(/\`/g,"&#96;")).replace(/\[/g,"&lbrack;").replace(/\]/g,"&rbrack;")).replace(/\{/g,"&#123;").replace(/\}/g,"&#125;")).replace(/\_/g,"&UnderBar;").replace(/!/g,"&#33;")).replace(/\%/g,"&percnt;").replace(/\~/,"&#126;"),parseTypography=data=>data.replace(/\*\*(.*?)\*\*/gim,"<b>$1</b>").replace(/_(.*?)_/gim,"<i>$1</i>").replace(/%(.*?)%/gim,"<u>$1</u>").replace(/\~\~(.*)\~\~/gim,"<del>$1</del>").replace(/\`([^\`]+)\`/gim,(_,code)=>`<code>${replaceSpecialCharacters(code)}</code>`),checkClassUsage=data=>{data.className="";for(let i=0;i<data.value.length;i++)if("{"===data.value[i]&&"."===data.value[i+1]){let newValue=data.value.slice(0,i);for(let j=i+2;j<data.value.length;j++){if("}"===data.value[j]){data.value=newValue+data.value.slice(j+1),data.value=data.value.trim(),data.className=data.className.trim();break}data.className+=data.value[j]}}return data},parseInlineStyle=data=>{data.inlineStyle="";for(let i=0;i<data.value.length;i++)if("{"===data.value[i]&&"!"!==data.value[i+1]&&"#"!==data.value[i+1]){let newValue=data.value.slice(0,i);for(let j=i+1;j<data.value.length;j++){if("}"===data.value[j]){data.value=newValue+data.value.slice(j+1).trim(),data.value=data.value.trim();break}data.inlineStyle+=data.value[j]}}return data},parseLink=data=>{let newData="",text="",url="";for(let i=0;i<data.length;i++)if("["===data[i])for(let j=i+1;j<data.length;j++){if("]"===data[j]&&"("===data[j+1]){i=j;break}text+=data[j]}else if("("===data[i]&&"]"===data[i-1])for(let j=i+1;j<data.length;j++){if(")"===data[j]){newData+=`<a href="${url}">${text}</a>`,i=data.length;for(let k=j+1;k<data.length;k++)newData+=data[k];for(;/(?<!\!)\[.+\]\(.+\)/.test(newData);)newData=parseLink(newData);break}url+=data[j]}else newData+=data[i];return newData},parseStyleAndClassAtribute=data=>`${data.className?` class="${data.className}"`:""}${data.inlineStyle?` style="${data.inlineStyle}"`:""}`,escapeCharacters=data=>data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=(data=data.replace(/\\\*/g,"&ast;")).replace(/\\\&/g,"&amp;")).replace(/\\\</g,"&lt;")).replace(/\\\>/g,"&gt;")).replace(/\\\"/g,"&quot;")).replace(/\\\'/g,"&#39;")).replace(/\\\%/g,"&percnt;")).replace(/\\\_/g,"&UnderBar;")).replace(/\\\`/g,"&#96;")).replace(/\\\{/g,"&#123;")).replace(/\\\}/g,"&#125;")).replace(/\\\[/g,"&lbrack;")).replace(/\\\]/g,"&rbrack;")).replace(/\\\(/g,"&lpar;")).replace(/\\\)/g,"&rpar;")).replace(/\\\\/g,"&bsol;")).replace(/\\\|/g,"&vert;")).replace(/\\\!/g,"&#33;")).replace(/\\\~/g,"&#126;")).replace(/\\\@/g,"&commat;")).replace(/\\\#/g,"&num;")).replace(/\\\$/g,"&dollar;")).replace(/\\\^/g,"&Hat;")).replace(/\\\=/g,"&equals;")).replace(/\\\+/g,"&plus;")).replace(/\\\;/g,"&semi;")).replace(/\\\:/g,"&colon;")).replace(/\\\,/g,"&comma;")).replace(/\\\./g,"&period;")).replace(/\\\//g,"&sol;")).replace(/\\\?/g,"&quest;")).replace(/\\\-/g,"&#45;"),parseBlockquote=(lexedData,index)=>{let breakIndex,newData={type:"blockquote",value:[]};for(let i=index;i<lexedData.length;i++){if(!lexedData[i].includes.blockquote){index=i,breakIndex=i;break}{let blockquoteDepthLevel=0,trimmedValue="";for(let j=0;j<lexedData[i].value.length;j++){if(">"!==lexedData[i].value[j]){trimmedValue=lexedData[i].value.slice(blockquoteDepthLevel).trim();break}blockquoteDepthLevel++}let blockquoteData={value:trimmedValue,blockquoteDepthLevel:blockquoteDepthLevel};lexedData[i].includes.classUsage&&(blockquoteData=checkClassUsage(blockquoteData)),lexedData[i].includes.inlineStyle&&(blockquoteData=parseInlineStyle(blockquoteData)),lexedData[i].includes.link&&(blockquoteData.value=parseLink(blockquoteData.value)),newData.value.push(blockquoteData)}}const parseDescendants=(parent,data,index)=>{let result="";for(let i=index;i<data.value.length&&(parent!==data.value[i].blockquoteDepthLevel||i===index);i++)parent+1===data.value[i].blockquoteDepthLevel&&(result+=parseDescendants(parent+1,data,i).length?`<blockquote${parseStyleAndClassAtribute(data.value[i])}>${parseTypography(data.value[i].value)}${parseDescendants(parent+1,data,i)}</blockquote>`:`<blockquote ${parseStyleAndClassAtribute(data.value[i])}>${parseTypography(data.value[i].value)}</blockquote>`);return result};return newData.value=parseDescendants(0,newData,0),breakIndex?breakIndex-=1:breakIndex=lexedData.length-1,{data:newData,breakIndex:breakIndex,endParagraph:breakIndex===lexedData.length-1}},parseImage=data=>{let newData={type:"image"};newData.value=data.value,data.includes.classUsage&&(newData=checkClassUsage(newData)),data.includes.inlineStyle&&(newData=parseInlineStyle(newData)),newData.altText="",newData.imageSrc="";for(let i=0;i<newData.value.length;i++)if("!"===newData.value[i]&&"["===newData.value[i+1])for(let j=i+2;j<newData.value.length;j++){if("]"===newData.value[j]){i=j;break}newData.altText+=newData.value[j]}else if("("===newData.value[i])for(let j=i+1;j<newData.value.length&&")"!==newData.value[j];j++)newData.imageSrc+=newData.value[j];return newData},parseHeading=data=>{let newData={type:"heading",headingLevel:0};for(let j=0;j<data.value.length&&"#"===data.value[j];j++)newData.headingLevel+=1;if(newData.value=data.value.substring(newData.headingLevel+1),data.includes.headingId){newData.headingId="";for(let i=0;i<data.value.length;i++)if("{"===data.value[i]&&"#"===data.value[i+1]){let newValue=newData.value.slice(0,i-newData.headingLevel-1);for(let j=i+2;j<data.value.length;j++){if("}"===data.value[j]){newData.value=newValue+newData.value.slice(j-newData.headingLevel).trim();break}newData.headingId+=data.value[j]}}newData.headingId=newData.headingId.trim(),data.includes.classUsage&&(newData=checkClassUsage(newData)),data.includes.inlineStyle&&(newData=parseInlineStyle(newData)),data.includes.link&&(newData.value=parseLink(newData.value))}else data.includes.classUsage&&(newData=checkClassUsage(newData)),data.includes.inlineStyle&&(newData=parseInlineStyle(newData)),data.includes.link&&(newData.value=parseLink(newData.value)),newData.headingId=newData.value.replace(/<\/?[^>]+(>|$)/g,"").replace(/ /g,"-").replace(/[^a-zA-Z0-6-]/g,"").toLowerCase().substring(0,50);return newData},syncCodeIndentation=data=>{let open=!1,defaultIndentation=0;for(let i=0;i<data.length;i++)data[i].includes.fencedCodeBlock?open?open=!1:(open=!0,defaultIndentation=data[i].totalTabs):open&&(data[i].totalTabs-defaultIndentation>=0&&(data[i].value="\t".repeat(data[i].totalTabs-defaultIndentation)+data[i].value),data[i].totalTabs=defaultIndentation);return data},parseUnorderedList=(lexedData,index)=>{let newData={},breakIndex;newData.type="unorderedList",newData.value=[],lexedData=syncCodeIndentation(lexedData);for(let i=index;i<lexedData.length;i++){if(!lexedData[i].includes.unorderedList&&(!lexedData[i].hasTab||newData.value[0]&&lexedData[i].totalTabs<=newData.value[0].totalTabs)){index=i,breakIndex=i;break}newData.value.push(lexedData[i])}const parseDescendants=(data,index,parentTabs)=>{let result=[];for(let i=index;i<data.length&&(data[i].totalTabs!==parentTabs||i===index);i++)data[i].totalTabs===parentTabs+1&&(parseDescendants(data,i,data[i].totalTabs).length?result.push(Object.assign({},data[i],{descendants:parseDescendants(data,i,data[i].totalTabs)})):result.push(data[i]));return result},mergeDescendants=data=>{let result="<ul>",needListTag=!0,listDescendantData="",isUnorderedListDescendent=!1;for(let i=0;i<data.length;i++){if(data[i].includes.unorderedList){let value=data[i].value.substr(2);value=parseTypography(value),value=escapeCharacters(value),value=parseLink(value);let className=checkClassUsage({value:value});value=className.value,className=className.className;let inlineStyle=parseInlineStyle({value:value});if(value=inlineStyle.value,inlineStyle=inlineStyle.inlineStyle,data[i].includes.image){let imageData=parseImage(data[i]);value=`<img ${imageData.imageSrc?`src="${imageData.imageSrc}"`:""} ${imageData.altText?`alt="${imageData.altText}"`:""}${parseStyleAndClassAtribute(data)} />`}needListTag?result+=`<li${inlineStyle?` style="${inlineStyle}"`:""}${className?` class="${className}"`:""}>${value}</li>`:(isUnorderedListDescendent=!0,listDescendantData+="<ul>",listDescendantData+=`<li${inlineStyle?` style="${inlineStyle}"`:""}${className?` class="${className}"`:""}>${value}</li>`)}else{let value=data[i].value;if(data[i].includes.horizontalRule&&(value="<hr />"),data[i].includes.fencedCodeBlock){data[i].includes.classUsage&&(data[i]=checkClassUsage(Object.assign({},data[i],{value:value}))),data[i].includes.inlineStyle&&(data[i]=parseInlineStyle(data[i])),value=`<pre ${parseStyleAndClassAtribute(data[i])}><code>`;for(let j=i+1;j<data.length;j++){if(data[j].includes.fencedCodeBlock){i=j,value+="</code></pre>";break}value+=`${replaceSpecialCharacters(data[j].value)}<br />`}}if(data[i].includes.blockquote&&(value=parseBlockquote(data,i),i=value.breakIndex,value=value.data.value),data[i].includes.table&&(value=parseTable(data,i),i=value.breakIndex,value=value.data.value),data[i].includes.marquee&&(value=parseMarquee(data[i]).value),data[i].includes.orderedList){needListTag&&("<ul>"!==result?listDescendantData+=result+="</ul>":listDescendantData="");let newData=[];for(let j=0;j<data.length&&data[i].includes.orderedList;j++)newData.push(Object.assign({},data[j],{totalTabs:data[j].totalTabs-data[i].totalTabs}));let parsedData=parseOrderedList(newData,i);needListTag=!1,i=parsedData.breakIndex,listDescendantData+=parsedData.data.value}if(data[i].includes.heading){let headingData=parseHeading(data[i]);value=`<h${headingData.headingLevel} ${headingData.headingId?`id = "${headingData.headingId}`:""}"${parseStyleAndClassAtribute(headingData)}>${headingData.value}</h${headingData.headingLevel}>`}if(data[i].includes.taskList){let className=checkClassUsage({value:value});value=className.value,className=className.className;let inlineStyle=parseInlineStyle({value:value});value=inlineStyle.value,inlineStyle=inlineStyle.inlineStyle,value=`<div ${inlineStyle?` style="${inlineStyle}"`:""}${className?` class="${className}"`:""}><input type="checkbox" id=${i} ${"x"===value[3]||"X"===value[3]?"checked":""} onclick="return false;" /><label for=${i}>${value.slice(5)}</label></div>`}if(value=parseTypography(value),value=escapeCharacters(value),value=parseLink(value),data[i].includes.image){let imageData=parseImage(data[i]);value=`<img ${imageData.imageSrc?`src="${imageData.imageSrc}"`:""} ${imageData.altText?`alt="${imageData.altText}"`:""}${parseStyleAndClassAtribute(data)} />`}let className=checkClassUsage({value:value});value=className.value,className=className.className;let inlineStyle=parseInlineStyle({value:value});value=inlineStyle.value,inlineStyle=inlineStyle.inlineStyle,value&&(result+=`<p${inlineStyle?` style="${inlineStyle}"`:""}${className?` class="${className}"`:""}>${value}</p>`)}data[i].descendants&&(isUnorderedListDescendent?listDescendantData+=mergeDescendants(data[i].descendants):result+=mergeDescendants(data[i].descendants)),isUnorderedListDescendent&&(listDescendantData+="</ul>",isUnorderedListDescendent=!1)}return needListTag?result+="</ul>":result=listDescendantData,result};let parentIndex=newData.value[0].totalTabs-1;return newData.value=mergeDescendants(parseDescendants(newData.value,0,parentIndex)),breakIndex?breakIndex-=1:breakIndex=lexedData.length-1,{data:newData,breakIndex:breakIndex,endParagraph:breakIndex===lexedData.length-1}},parseOrderedList=(lexedData,index)=>{let newData={},breakIndex=0;newData.type="orderedList",newData.value=[],lexedData=syncCodeIndentation(lexedData);for(let i=index;i<lexedData.length;i++){if(!lexedData[i].includes.orderedList&&(!lexedData[i].hasTab||newData.value[0]&&lexedData[i].totalTabs<=newData.value[0].totalTabs)){index=i,breakIndex=i;break}newData.value.push(lexedData[i])}const parseDescendants=(data,index,parentTabs)=>{let result=[];for(let i=index;i<data.length&&(data[i].totalTabs!==parentTabs||i===index);i++)data[i].totalTabs===parentTabs+1&&(parseDescendants(data,i,data[i].totalTabs).length?result.push(Object.assign({},data[i],{descendants:parseDescendants(data,i,data[i].totalTabs)})):result.push(data[i]));return result},mergeDescendants=data=>{let result="<ol>",needListTag=!0,listDescendantData="",isOrderedListDescendent=!1;for(let i=0;i<data.length;i++){if(data[i].includes.orderedList){let totalDigitsToRemove=0,value=data[i].value;for(let j=0;j<value.length&&!isNaN(value[j]);j++)totalDigitsToRemove++;value=value.substr(totalDigitsToRemove+2),value=parseTypography(value),value=escapeCharacters(value),value=parseLink(value);let className=checkClassUsage({value:value});value=className.value,className=className.className;let inlineStyle=parseInlineStyle({value:value});if(value=inlineStyle.value,inlineStyle=inlineStyle.inlineStyle,data[i].includes.image){let imageData=parseImage(data[i]);value=`<img ${imageData.imageSrc?`src="${imageData.imageSrc}"`:""} ${imageData.altText?`alt="${imageData.altText}"`:""}${parseStyleAndClassAtribute(data)} />`}needListTag?result+=`<li${inlineStyle?` style="${inlineStyle}"`:""}${className?` class="${className}"`:""}>${value}</li>`:(listDescendantData+="<ol>",isOrderedListDescendent=!0,listDescendantData+=`<li${inlineStyle?` style="${inlineStyle}"`:""}${className?` class="${className}"`:""}>${value}</li>`)}else{let value=data[i].value;if(data[i].includes.horizontalRule&&(value="<hr />"),data[i].includes.fencedCodeBlock){data[i].includes.classUsage&&(data[i]=checkClassUsage(Object.assign({},data[i],{value:value}))),data[i].includes.inlineStyle&&(data[i]=parseInlineStyle(data[i])),value=`<pre ${parseStyleAndClassAtribute(data[i])}><code>`;for(let j=i+1;j<data.length;j++){if(data[j].includes.fencedCodeBlock){i=j,value+="</code></pre>";break}value+=`${replaceSpecialCharacters(data[j].value)}<br />`}}if(data[i].includes.blockquote&&(value=parseBlockquote(data,i),i=value.breakIndex,value=value.data.value),data[i].includes.table&&(value=parseTable(data,i),i=value.breakIndex,value=value.data.value),data[i].includes.marquee&&(value=parseMarquee(data[i]).value),data[i].includes.unorderedList){needListTag&&("<ol>"!==result?listDescendantData+=result+="</ol>":listDescendantData="");let newData=[];for(let j=0;j<data.length&&data[i].includes.unorderedList;j++)newData.push(Object.assign({},data[j],{totalTabs:data[j].totalTabs-data[i].totalTabs}));needListTag=!1,newData=parseUnorderedList(newData,i),i=newData.breakIndex,listDescendantData+=newData.data.value}if(data[i].includes.heading){let headingData=parseHeading(data[i]);value=`<h${headingData.headingLevel} ${headingData.headingId?`id = "${headingData.headingId}`:""}"${parseStyleAndClassAtribute(headingData)}>${headingData.value}</h${headingData.headingLevel}>`}if(value=parseTypography(value),value=escapeCharacters(value),value=parseLink(value),data[i].includes.image){let imageData=parseImage(data[i]);value=`<img ${imageData.imageSrc?`src="${imageData.imageSrc}"`:""} ${imageData.altText?`alt="${imageData.altText}"`:""}${parseStyleAndClassAtribute(data)} />`}if(data[i].includes.taskList){let className=checkClassUsage({value:value});value=className.value,className=className.className;let inlineStyle=parseInlineStyle({value:value});value=inlineStyle.value,inlineStyle=inlineStyle.inlineStyle,value=`<div ${inlineStyle?` style="${inlineStyle}"`:""}${className?` class="${className}"`:""}><input type="checkbox" id=${i} ${"x"===value[3]||"X"===value[3]?"checked":""} onclick="return false;" /><label for=${i}>${value.slice(5)}</label></div>`}let className=checkClassUsage({value:value});value=className.value,className=className.className;let inlineStyle=parseInlineStyle({value:value});value=inlineStyle.value,inlineStyle=inlineStyle.inlineStyle,value&&(result+=`<p${inlineStyle?` style="${inlineStyle}"`:""}${className?` class="${className}"`:""}>${value}</p>`)}data[i].descendants&&(isOrderedListDescendent?listDescendantData+=mergeDescendants(data[i].descendants):result+=mergeDescendants(data[i].descendants)),isOrderedListDescendent&&(listDescendantData+="</ol>",isOrderedListDescendent=!1)}return needListTag?result+="</ol>":result=listDescendantData,result};let parentIndex=newData.value[0].totalTabs-1;return newData.value=mergeDescendants(parseDescendants(newData.value,0,parentIndex)),breakIndex?breakIndex-=1:breakIndex=lexedData.length-1,{data:newData,breakIndex:breakIndex,endParagraph:breakIndex===lexedData.length-1}},parseTable=(lexedData,index)=>{let newData={type:"table",value:{head:[],body:[]}},breakIndex;const parseTableRow=row=>{let tableRowValue=[];if("|"===row[0]){{let tableDataValue="";for(let i=0;i<row.length;i++)if(i===row.length-1&&"|"!==row[i]){tableDataValue+=row[i];let classUsage=checkClassUsage({value:tableDataValue}),inlineStyle=parseInlineStyle({value:classUsage.value});classUsage.className.length&&(newData.className=classUsage.className),inlineStyle.inlineStyle.length&&(newData.inlineStyle=inlineStyle.inlineStyle)}else if("|"===row[i]){let value=escapeCharacters(tableDataValue.trim());if(/!\[[^\]]*\]\((.*?)\s*("(?:.*[^"])")?\s*\)/.test(value)){let newValue={altText:"",imageSrc:""};for(let i=0;i<value.length;i++)if("!"===value[i]&&"["===value[i+1])for(let j=i+2;j<value.length;j++){if("]"===value[j]){i=j;break}newValue.altText+=value[j]}else if("("===value[i])for(let j=i+1;j<value.length&&")"!==value[j];j++)newValue.imageSrc+=value[j];value=`<img src="${newValue.imageSrc}" alt="${newValue.altText}" />`}else value=parseLink(parseTypography(value));tableDataValue.length&&tableRowValue.push(value),tableDataValue=""}else tableDataValue+=row[i]}return tableRowValue}};for(let i=index;i<lexedData.length;i++){if(!lexedData[i].includes.table){breakIndex=i;break}if(i===index)newData.value.head=parseTableRow(lexedData[i].value);else{const checkHeadingSyntax=data=>{for(let j=0;j<data.length;j++)for(let k=0;k<data[j].length;k++)if("-"!==data[j][k]&&"="!==data[j][k])return!1;return!0};checkHeadingSyntax(parseTableRow(lexedData[i].value))||newData.value.body.push(parseTableRow(lexedData[i].value)),i===lexedData.length-1&&(breakIndex=lexedData.length-1)}}const mergeTableRow=(tr,isHeading)=>{let trValue="<tr>";return tr.forEach(td=>{trValue+=isHeading?`<th>${td}</th>`:`<td>${td}</td>`}),trValue+"</tr>"};let result=`<table${parseStyleAndClassAtribute(newData)}><thead>${mergeTableRow(newData.value.head,!0)}</thead><tbody>`;return newData.value.body.forEach(tr=>{result+=mergeTableRow(tr,!1)}),result=`${result}</tbody></table>`,newData.value=result,delete newData.inlineStyle,delete newData.className,breakIndex?breakIndex-=1:breakIndex=lexedData.length-1,{data:newData,breakIndex:breakIndex,endParagraph:breakIndex===lexedData.length-1}},parseMarquee=data=>{let newData={type:"marquee",value:data.value.substr(2).trim()};newData=checkClassUsage(newData),newData=parseInlineStyle(newData);let direction="~>"===data.value.slice(0,2)?"right":"<~"===data.value.slice(0,2)?"left":null;return newData.value=`<div class="marquee" data-direction="${direction}"><div class="marquee-content"${parseStyleAndClassAtribute(newData)}>${newData.value}</div></div>`,delete newData.inlineStyle,delete newData.className,newData},Parse=lexedData=>{let parsedData=[],endParagraph=!1,paragraphValue=[];for(let index=0;index<lexedData.length;index++){let data=lexedData[index];if(""===data.value&&endParagraph)endParagraph=!1;else if(""!==data.value||endParagraph){let newData={};if(data.value=escapeCharacters(data.value),data.includes.image||data.includes.link||(data.value=parseTypography(data.value)),data.includes.fencedCodeBlock){newData.type="fencedCodeBlock",newData.value=data.value,data.includes.classUsage&&(newData=checkClassUsage(newData)),data.includes.inlineStyle&&(newData=parseInlineStyle(newData)),newData.value="";for(let j=index+1;j<lexedData.length;j++){if(lexedData[j].includes.fencedCodeBlock){index=j,lexedData[j].lastElement&&(endParagraph=!0);break}newData.value+=`${replaceSpecialCharacters(lexedData[j].value)}<br />`}}else if(data.includes.defineClass){newData.type="defineClass",newData.value="";for(let i=index+1;i<lexedData.length;i++){if("---"===lexedData[i].value){index=i,lexedData[i].lastElement&&(endParagraph=!0);break}newData.value+=lexedData[i].value}}else data.includes.stylesheet?(newData.type="stylesheet",newData.value=data.value.match(/(https?.\/\/[^\s]+)/g)[0]):data.includes.externalScript?(newData.type="scripts",newData.value=data.value.match(/(https?.\/\/[^\s]+)/g)[0]):data.includes.horizontalRule?(newData.type="plain",newData.value="<hr />"):data.includes.unorderedList?(newData=parseUnorderedList(lexedData,index),endParagraph=newData.endParagraph,index=newData.breakIndex,newData=newData.data):data.includes.orderedList?(newData=parseOrderedList(lexedData,index),endParagraph=newData.endParagraph,index=newData.breakIndex,newData=newData.data):data.includes.blockquote?(newData=parseBlockquote(lexedData,index),endParagraph=newData.endParagraph,index=newData.breakIndex,newData=newData.data):data.includes.table?(newData=parseTable(lexedData,index),endParagraph=newData.endParagraph,index=newData.breakIndex,newData=newData.data):data.includes.marquee?newData=parseMarquee(data):data.includes.image?newData=parseImage(data):data.includes.heading?newData=parseHeading(data):data.includes.taskList?(newData.type="taskList","x"===data.value[3]||"X"===data.value[3]?newData.checked=!0:newData.checked=!1,newData.value=data.value.slice(5).trim(),data.includes.classUsage&&(newData=checkClassUsage(newData)),data.includes.inlineStyle&&(newData=parseInlineStyle(newData)),data.includes.link&&(newData.value=parseLink(newData.value))):-1===Object.values(data.includes).indexOf(!0)||Object.values(data.includes).indexOf(!0)===Object.keys(data.includes).indexOf("classUsage")||Object.values(data.includes).indexOf(!0)===Object.keys(data.includes).indexOf("inlineStyle")||Object.values(data.includes).indexOf(!0)===Object.keys(data.includes).indexOf("link")?(newData.type="plain",newData.value=data.value,data.includes.classUsage&&(newData=checkClassUsage(newData)),data.includes.inlineStyle&&(newData=parseInlineStyle(newData)),data.includes.link&&(newData.value=parseLink(newData.value)),newData.value=parseTypography(newData.value)):paragraphValue.push(data);paragraphValue.push(newData)}else endParagraph=!0;(endParagraph||data.lastElement)&&(endParagraph=!1,parsedData.push(paragraphValue),paragraphValue=[])}let parsedStyleTag=[],stylesheets=[],scripts=[];const toHTML=data=>{let htmlData="";for(let i=0;i<data.length;i++)"plain"===data[i].type||"blockquote"===data[i].type||"unorderedList"===data[i].type||"orderedList"===data[i].type||"table"===data[i].type||"marquee"===data[i].type?htmlData+=`${data[i].className||data[i].inlineStyle?`<span${parseStyleAndClassAtribute(data[i])}>${data[i].value}</span>`:`${data[i].value}`}${data[i+1]&&!/<(?!\/?(a|img|b|i|u|del|code)(?=>|\s.*>))\/?.*?>/i.test(data[i+1].value)&&"plain"===data[i+1].type&&"<hr />"!==data[i].value?"<br />":""}`:"heading"===data[i].type?htmlData+=`<h${data[i].headingLevel} ${data[i].headingId?`id="${data[i].headingId}`:""}"${parseStyleAndClassAtribute(data[i])}>${data[i].value}</h${data[i].headingLevel}>`:"fencedCodeBlock"===data[i].type?htmlData+=`<pre${parseStyleAndClassAtribute(data[i])}><code>${data[i].value}</code></pre>`:"defineClass"===data[i].type?-1===parsedStyleTag.indexOf(data[i].value)&&parsedStyleTag.push(data[i].value):"stylesheet"===data[i].type?-1===stylesheets.indexOf(data[i].value)&&stylesheets.push(data[i].value):"scripts"===data[i].type?-1===scripts.indexOf(data[i].value)&&scripts.push(data[i].value):"image"===data[i].type?htmlData+=`<img ${data[i].imageSrc?`src="${data[i].imageSrc}"`:""} ${data[i].altText?`alt="${data[i].altText}"`:""}${parseStyleAndClassAtribute(data[i])} />`:"taskList"===data[i].type&&(htmlData+=`<div${parseStyleAndClassAtribute(data[i])}><input type="checkbox" id=${i} ${data[i].checked?"checked":""} onclick="return false;" /><label for="${i}">${data[i].value}</label></div>`);return htmlData};let parsedHtml="";for(let i=0;i<parsedData.length;i++){let needParagraphTag=!1;for(let j=0;j<parsedData[i].length;j++){if("heading"===parsedData[i][j].type){needParagraphTag=!1;break}/<\/?[a-z][\s\S]*>/i.test(parsedData[i][j].value)&&/<a>/i.test(parsedData[i][j].value)?needParagraphTag=!1:"blockquote"===parsedData[i][j].type?needParagraphTag=!1:"plain"===parsedData[i][j].type&&(needParagraphTag=!("<hr />"===parsedData[i][j].value&&1===parsedData[i].length||/<(?!\/?(a|img|b|i|u|del|code)(?=>|\s.*>))\/?.*?>/i.test(parsedData[i][j].value)))}toHTML(parsedData[i])&&(parsedHtml+=needParagraphTag?`<p>${toHTML(parsedData[i])}</p>`:toHTML(parsedData[i]))}return{body:parsedHtml,styles:parsedStyleTag,stylesheets:stylesheets,scripts:scripts}};module.exports={Parse:Parse};
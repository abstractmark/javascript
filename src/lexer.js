const Lex=tokenizedData=>{let lexedData=[];for(let i=0;i<tokenizedData.length;i++){let newData={includes:{}};/(.*?)\{((?!(\#|\!|\.)))(.*?)\}/.test(tokenizedData[i].value)?newData.includes.inlineStyle=!0:newData.includes.inlineStyle=!1,/(.*?)\{\.(.*?)\}/.test(tokenizedData[i].value)?newData.includes.classUsage=!0:newData.includes.classUsage=!1,/(.*?)\{\#(.*?)\}/.test(tokenizedData[i].value)?newData.includes.headingId=!0:newData.includes.headingId=!1,/!\[[^\]]*\]\((.*?)\s*("(?:.*[^"])")?\s*\)/.test(tokenizedData[i].value)?newData.includes.image=!0:newData.includes.image=!1,/(?<!\!)\[.+\]\(.+\)/.test(tokenizedData[i].value)?newData.includes.link=!0:newData.includes.link=!1,/\|(.*?)\|/.test(tokenizedData[i].value)?newData.includes.table=!0:newData.includes.table=!1,/^- \[[xX ]\] \S+/.test(tokenizedData[i].value)?newData.includes.taskList=!0:newData.includes.taskList=!1,"---define"===tokenizedData[i].value?newData.includes.defineClass=!0:newData.includes.defineClass=!1,"---"===tokenizedData[i].value?newData.includes.horizontalRule=!0:newData.includes.horizontalRule=!1,/^\`\`\`/.test(tokenizedData[i].value)?newData.includes.fencedCodeBlock=!0:newData.includes.fencedCodeBlock=!1,/^\d+\. ./.test(tokenizedData[i].value)?newData.includes.orderedList=!0:newData.includes.orderedList=!1,/^- ((?!\[[xX ]\]).)*$/.test(tokenizedData[i].value)?newData.includes.unorderedList=!0:newData.includes.unorderedList=!1,/^#{1,6} ./.test(tokenizedData[i].value)?newData.includes.heading=!0:newData.includes.heading=!1,/^>+ ./.test(tokenizedData[i].value)?newData.includes.blockquote=!0:newData.includes.blockquote=!1,/stylesheet\s*(=|:)/.test(tokenizedData[i].value)?newData.includes.stylesheet=!0:newData.includes.stylesheet=!1,/script\s*(=|:)/.test(tokenizedData[i].value)?newData.includes.externalScript=!0:newData.includes.externalScript=!1,/(<~|~>)\s*(.*?)/.test(tokenizedData[i].value)?newData.includes.marquee=!0:newData.includes.marquee=!1,newData=Object.assign(newData,tokenizedData[i]),lexedData.push(newData)}return lexedData};module.exports={Lex:Lex};